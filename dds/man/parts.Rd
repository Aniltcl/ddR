% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/dobject.R
\name{parts}
\alias{parts}
\title{Retrieves, as a list of independent objects of 'DObject' type, pointers to each individual
partition of the input dobj.}
\usage{
parts(dobj, index = NULL)
}
\arguments{
\item{dobj}{The DObject to retrieve the parts of in list format.}

\item{index}{By default NULL, this is a numeric vector or list or indices referencing the partitions of the
Dobject to get the parts to. If NULL, then this list contains pointers to all partitions.

parts() is mainly designed to be used in conjunction with dmapply when functions are written
to be applied over DObjects in a partition-by-partition fashion. In other words, by returning
a list of the individual partitions of a DObject, that list can then be used in dmapply statements
where the apply function goes over every element of that list, (i.e., every partition of the dobject).}
}
\value{
A list of DObjects, each referring to one partition of the input DObject.
}
\description{
Retrieves, as a list of independent objects of 'DObject' type, pointers to each individual
partition of the input dobj.
}
\examples{
\dontrun{
a <- darray(psize=c(3,3),dim=c(9,9),data=3) # A darray of 9 partitions, each 3x3
b <- dmapply(function(x) sum(x), parts(a)) # dmapply to each 3x3 partition of 'a'
c <- parts(a,3) # A list containing one DObject, which is the 3rd partition of 'a'
}
}

